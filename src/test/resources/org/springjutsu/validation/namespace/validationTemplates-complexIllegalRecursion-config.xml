<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springjutsu.org/schema/validation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
		http://www.springjutsu.org/schema/validation http://www.springjutsu.org/schema/validation-0.6.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- Create a springjutsu validation configuration, named springjutsuValidator -->
	<configuration validatorName="testValidationManagerName"/>
	
	<!-- Detect complex illegal recursion through nested rules, 
		and multiple template references. -->
	<entity class="org.springjutsu.validation.test.entities.Customer">
		<model-validation>
			<rule path="favoriteColor" type="notEmpty">
				<template-ref templateName="illegalRecursionA"/>
			</rule>
		</model-validation>
		<templates>
			<template name="illegalRecursionA">
				<rule path="firstName" type="notEmpty">
					<template-ref templateName="illegalRecursionB"/>
				</rule>
			</template>
			<template name="illegalRecursionB">
				<rule path="lastName" type="notEmpty">
					<template-ref templateName="illegalRecursionC"/>
				</rule>
			</template>
			<template name="illegalRecursionC">
				<rule path="emailAddress" type="notEmpty">
					<template-ref templateName="illegalRecursionA"/>
				</rule>
			</template>
		</templates>
	</entity>
	
	<!-- Include messages used by application -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"/>
	
</beans:beans>