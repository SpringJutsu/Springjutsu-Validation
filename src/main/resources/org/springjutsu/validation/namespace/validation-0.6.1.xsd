<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.springjutsu.org/schema/validation"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	targetNamespace="http://www.springjutsu.org/schema/validation"
	elementFormDefault="qualified" attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans" 
		schemaLocation="http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"/>

	<xsd:element name="configuration">
		<xsd:annotation>
			<xsd:documentation>
				Configures Springjutsu validation framework for typical use.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:all>
				<xsd:element ref="rules-config" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="message-config" minOccurs="0" maxOccurs="1"/>
			</xsd:all>
			<xsd:attribute name="validatorName" type="xsd:string" use="optional" default="validationManager">
				<xsd:annotation>
					<xsd:documentation>
						The name of the JSR-303 validation manager bean to register with 
						Spring as a validator. Defaults to "validationManager". Currently,
						this is only important if you plan on using the MVC @Controller model,
						as you'll need to provide this bean name as the reference to either
						mvc:annotation-driven, or the ConfigurableWebBindingInitializer.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="rules-config">
		<xsd:annotation>
			<xsd:documentation>
				Allows for the registration of one or more custom rule executors,
				and specification of whether or not default rules should be added.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="rule-executor" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="addDefaultRuleExecutors" type="xsd:boolean" use="optional" default="true">
				<xsd:annotation>
					<xsd:documentation>
						Indicates whether or not the default rule executors 
						packaged with springjutsu validation should be added
						to the RuleExecutorContainer instance.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="message-config">
		<xsd:annotation>
			<xsd:documentation>
				Configures look up of messages from the spring MessageSource.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="fieldLabelPrefix" type="xsd:string" use="optional" default="">
				<xsd:annotation>
					<xsd:documentation>
						Indicates a message code prefix for field labels.
						Default field label message codes are "simpleClassName.fieldName"
						where simple class name starts with a lower case letter. Providing 
						a prefix here will generate a message code pattern of 
						"prefix.simpleClassName.fieldName" where simple class name 
						still starts with a lower case letter.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="errorMessagePrefix" type="xsd:string" use="optional" default="errors.">
				<xsd:annotation>
					<xsd:documentation>
						Indicates a message code prefix for default failure messages
						for validation rule executors. Default failure message is 
						"errors.ruleExecutorName" where ruleExecutorName is the name under
						which the rule executor was registered. A prefix here will generate
						a message code pattern of "prefix.ruleExecutorName" following
						the same conventions.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="rule-executor">
		<xsd:annotation>
			<xsd:documentation>
				Registers a single rule executor with a given name and implementation.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="name" use="required">
				<xsd:annotation>
					<xsd:documentation>
						The name of the validation rule executor, will be used when 
						specifying "type" on a validation rule. Will also be used
						when looking up the default error message.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="class" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation source="java:java.lang.Class">
						The implementing class of the rule executor.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="mvc-annotations">
		<xsd:annotation>
			<xsd:documentation>
				Configures the @SuccessView and @ValidationFailureView
				annotation handlers and support beans for enhancing
				Spring MVC @Controller pattern.
			</xsd:documentation>
		</xsd:annotation>
	</xsd:element>

	<xsd:element name="entity">
		<xsd:annotation>
			<xsd:documentation>
				Frame to register validation rules for an entity type.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:all>
				<xsd:element ref="model-validation" minOccurs="0" maxOccurs="1"/>
				<xsd:element ref="context-validation" minOccurs="0" maxOccurs="1"/>
			</xsd:all>
			<xsd:attribute name="class" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation source="java:java.lang.Class">
						The fully qualified name of the bean's class.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="model-validation">
		<xsd:annotation>
			<xsd:documentation>
				Model rules are those rules which should always execute if the
				field to be validated was present in the request. These are rules
				like formatting constraints, length constraints, and type constraints.
				These rules should not dictate what fields are required, since they will
				be evaluated if and only if the field to be validated was posted in
				the request.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="rule" minOccurs="1" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="context-validation">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="form" minOccurs="1" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="form">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="rule" minOccurs="1" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="path" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>
						A comma-delimited list of URI path suffixes to the validated resource.
						For Spring MVC, utilize your restful path (which may include wildcards), 
							e.g. /accounts/new,/accounts/{id}/edit 
						For Spring Web Flow, use the format &lt;flowId>:&lt;stateName>, 
						e.g. /accounts/create-account:accountForm,/accounts/edit-account:accountForm
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
		
	<xsd:element name="rule">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="rule" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="type" use="required">
				<xsd:annotation>
					<xsd:documentation>
						The type of rule you wish to apply.
						This corresponds to the bean name 
						of the validation rule to be referenced.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="value" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The value to be passed to the rule parser.
						</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="path" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The path to the field this rule should check.
						</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="message" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The key to a message source entry, which will override the default associated with the rule type.
						</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="errorPath" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The path to the field under which the error is to be logged, which will override the default given by "path".
						</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>