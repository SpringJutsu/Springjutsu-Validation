<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springjutsu.org/schema/validation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springjutsu.org/schema/validation http://www.springjutsu.org/schema/validation-0.7.2.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<context:annotation-config />

	<!-- Create a springjutsu validation configuration, named springjutsuValidator -->
	<configuration validatorName="testValidationManagerName"/>
	
	<entity class="org.springjutsu.validation.test.entities.Company">
		<!-- 
			In this test, rather than recurse, enforce rules on sub collections.
			This is a ludicrous example, but it gets the job done.
		-->
		<recursion-exclude propertyName="acquisitions"/>
		<rule path="acquisitions.name" type="notEmpty">
			<rule path="acquisitions.acquisitions.name" type="notEmpty">
				<rule path="acquisitions.acquisitions.customers.lastName" type="required"/>
			</rule>
			<rule path="acquisitions.customers.lastName" type="required"/>
		</rule>
	</entity>
	
	<!-- Include messages used by application -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"/>
</beans:beans>